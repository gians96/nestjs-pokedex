services:
  mongodb:
    image: mongo:8.0
    container_name: pokedex-mongodb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./mongodb_data:/data/db
    command: mongod --replSet rs0 --bind_ip_all
    healthcheck:
      test: [ "CMD", "mongosh", "--eval", "db.runCommand({ ping: 1 }).ok" ]
      interval: 5s
      timeout: 10s
      retries: 30

  mongo-init:
    image: mongo:8.0
    depends_on:
      mongodb:
        condition: service_healthy
    command: >
      bash -c " echo 'Waiting for MongoDB to be ready...'; until mongosh --host mongodb --eval 'print(\"MongoDB is ready\")' &>/dev/null; do
        sleep 1;
      done; echo 'Initializing replica set...'; mongosh --host mongodb --eval 'rs.initiate({_id: \"rs0\", members: [{_id: 0, host: \"mongodb:27017\"}]})'; echo 'Waiting for replica set to elect primary...'; until mongosh --host mongodb --eval 'rs.isMaster().ismaster' | grep -q 'true'; do
        sleep 1;
      done; echo 'Replica set successfully initialized with primary node'; mongosh --host mongodb --eval 'rs.status()'; "

volumes:
  mongodb_data:
